import"./_commonjsHelpers.DNRlJwnI.js";import{p as u,f as h,s as i,d as y,t as v,b as g,a as w,c as _,r as b,e as x}from"./render.Du_FJbqY.js";import{a as $,A,b as k}from"./validator.Ckcn-nCU.js";import{O as F}from"./definitions.Dt-LkhWU.js";import{c as T}from"./index.B_FO6tiz.js";import{B as V}from"./basic-form.BwX8TR7O.js";import{d as j}from"./form-defaults.Bj5bQk-p.js";import"./function.CbZTDZ7J.js";import"./snippet.-1rPG3Sv.js";import"./form.BV7q-JgB.js";import"./content.B9iT13at.js";import"./submit-button.DPSob7Wm.js";import"./file-include.sluCXPga.js";import"./textarea-include.BgTXtb-A.js";var B=h(`<p>The form accepts a sequence of digits (checked synchronously) with the number
  of digits from 3 to 6 (checked asynchronously, with a 70% chance of successful
  verification)</p> <p> </p> <!>`,1);function G(m,n){u(n,!0);const r=$(new A),c=async(e,s)=>{if(await new Promise(l=>setTimeout(l,600)),Math.random()>.7)throw new Error("async error");return s.length>=e.minimum&&s.length<=e.maximum};r.addKeyword({keyword:"asyncLength",async:!0,type:"string",validate:c});const p={$async:!0,type:"string",pattern:"^\\d+$",asyncLength:{minimum:3,maximum:6}},t=T({...j,validator:k({ajv:r}),schema:p,fieldsValidationMode:F,onSubmit:console.log});var a=B(),o=i(y(a),2),d=_(o);b(o);var f=i(o,2);V(f,{get form(){return t},novalidate:!0,autocomplete:"off"}),v(()=>x(d,`form validation: ${t.submission.status??""}, fields validation: ${t.fieldsValidation.status??""}, errors: ${t.errors.size>0}`)),g(m,a),w()}export{G as default};
