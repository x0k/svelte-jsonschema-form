import"./_commonjsHelpers.nvgNgv2Y.js";import"./legacy.DB2kUx4h.js";import{p as u,f as h,s as i,a as y,t as v,b as g,c as w,e as _,r as b,i as x}from"./render.C4_AKZiv.js";import{i as $}from"./lifecycle.njOs7FTq.js";import{a as A,A as k,b as F}from"./validator.NNDxiZ0A.js";import{O as T}from"./definitions.lsr2n3tz.js";import{c as V}from"./index.C-YzB9Jc.js";import{B as j}from"./basic-form.DZEP-p-g.js";import{d as B}from"./form-defaults.BQFhvR76.js";import"./function.CS4J6_bl.js";import"./snippet.CQu7JagD.js";import"./form.Dv1Q890s.js";import"./content.BPy435S3.js";import"./submit-button.DZhyrA_2.js";import"./file-include.Cpuu75vI.js";import"./textarea-include.D_Tgi80b.js";var L=h(`<p>The form accepts a sequence of digits (checked synchronously) with the number
  of digits from 3 to 6 (checked asynchronously, with a 70% chance of successful
  verification)</p> <p> </p> <!>`,1);function Q(m,n){u(n,!1);const r=A(new k),c=async(e,s)=>{if(await new Promise(l=>setTimeout(l,600)),Math.random()>.7)throw new Error("async error");return s.length>=e.minimum&&s.length<=e.maximum};r.addKeyword({keyword:"asyncLength",async:!0,type:"string",validate:c});const p={$async:!0,type:"string",pattern:"^\\d+$",asyncLength:{minimum:3,maximum:6}},t=V({...B,validator:F({ajv:r}),schema:p,fieldsValidationMode:T,onSubmit:console.log});$();var a=L(),o=i(y(a),2),f=_(o);b(o);var d=i(o,2);j(d,{get form(){return t},novalidate:!0,autocomplete:"off"}),v(()=>x(f,`form validation: ${t.submission.status??""}, fields validation: ${t.fieldsValidation.status??""}, errors: ${t.errors.size>0}`)),g(m,a),w()}export{Q as default};
