import"./_commonjsHelpers.CzDnYlJT.js";import"./legacy.DaW1F2nJ.js";import{p as h,f as y,s as m,j as v,t as g,b as w,a as _,c as b,r as x,l as $,e as r}from"./render.BV3w21Ef.js";import{i as k}from"./lifecycle.Dg8mMOXT.js";import{a as A,A as j,b as F}from"./validator.CD9YGZw5.js";import{O as T}from"./definitions.V2UA0x6n.js";import{c as V}from"./index.BM10SGd2.js";import{B}from"./basic-form.COsYh0Us.js";import{d as L}from"./form-defaults.D5hzRqNS.js";import"./function.L6Xeluc3.js";import"./snippet.B5fxbsOG.js";import"./form.Dyfjmos-.js";import"./content.DeDubchS.js";import"./submit-button.Brw4KR_f.js";import"./file-include.67osRPk2.js";import"./textarea-include.TdDUFdke.js";var M=y(`<p>The form accepts a sequence of digits (checked synchronously) with the number
  of digits from 3 to 6 (checked asynchronously, with a 70% chance of successful
  verification)</p> <p> </p> <!>`,1);function R(n,c){h(c,!1);const a=A(new j),p=async(e,i)=>{if(await new Promise(u=>setTimeout(u,600)),Math.random()>.7)throw new Error("async error");return i.length>=e.minimum&&i.length<=e.maximum};a.addKeyword({keyword:"asyncLength",async:!0,type:"string",validate:p});const f={$async:!0,type:"string",pattern:"^\\d+$",asyncLength:{minimum:3,maximum:6}},t=V({...L,validator:F({ajv:a}),schema:f,fieldsValidationMode:T,onSubmit:console.log});k();var s=M(),o=m(v(s),2),d=b(o);x(o);var l=m(o,2);B(l,{get form(){return t},novalidate:!0,autocomplete:"off"}),g(()=>$(d,`form validation: ${r(()=>t.submission.status)??""}, fields validation: ${r(()=>t.fieldsValidation.status)??""}, errors: ${r(()=>t.errors.size>0)??""}`)),w(n,s),_()}export{R as default};
