import"./_commonjsHelpers.aYOyWGRt.js";import{p as u,f as h,s as i,e as y,t as v,b as g,a as w,c as _,r as b,h as x}from"./render.rETKdxi5.js";import{a as $,A,b as k}from"./validator.BpiqlJgn.js";import{O as F}from"./definitions.CxtJfqPD.js";import{c as T}from"./en.D4bEW2s2.js";import{B as V}from"./basic-form.BBKS5l9T.js";import{d as j}from"./form-defaults.y4xrd93z.js";import"./function.BB_gY1-Q.js";import"./snippet.QEy_2lEM.js";import"./form.l-F1Uemt.js";import"./content.BUIrxNth.js";import"./submit-button.CcXBvSM_.js";import"./file-include.Bhmk7zT2.js";import"./file-include.2aBxtyJO.js";var B=h(`<p>The form accepts a sequence of digits (checked synchronously) with the number
  of digits from 3 to 6 (checked asynchronously, with a 70% chance of successful
  verification)</p> <p> </p> <!>`,1);function G(m,n){u(n,!0);const r=$(new A),c=async(e,s)=>{if(await new Promise(l=>setTimeout(l,600)),Math.random()>.7)throw new Error("async error");return s.length>=e.minimum&&s.length<=e.maximum};r.addKeyword({keyword:"asyncLength",async:!0,type:"string",validate:c});const p={$async:!0,type:"string",pattern:"^\\d+$",asyncLength:{minimum:3,maximum:6}},t=T({...j,validator:k({ajv:r}),schema:p,fieldsValidationMode:F,onSubmit:console.log});var a=B(),o=i(y(a),2),f=_(o);b(o);var d=i(o,2);V(d,{get form(){return t},novalidate:!0,autocomplete:"off"}),v(()=>x(f,`form validation: ${t.submission.status??""}, fields validation: ${t.fieldsValidation.status??""}, errors: ${t.errors.size>0}`)),g(m,a),w()}export{G as default};
