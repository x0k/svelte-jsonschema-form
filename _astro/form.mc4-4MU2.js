import"./_commonjsHelpers.BzMcPD46.js";import{p as O,f as S,a as E,t as _,b as F,c as $,s as A,h as k,e as x,r as R}from"./render.ioaXADLG.js";import{h as m,d as N,g as T,O as j,a as I,b as P}from"./definitions.B3QdxsEi.js";import{c as B}from"./en.RehLlS_N.js";import{B as M}from"./basic-form.h-E7ZBtU.js";import{p as u,f as z,g as C,h,t as J,o as L,a as d,m as G,b,e as H,c as p,s as w,d as U,r as Y}from"./index.DgI0msCe.js";import{g as q}from"./model.B9APFbQj.js";import{d as D}from"./form-defaults.Dbf0crwY.js";import{u as v,i as K}from"./index.BPQVTpeN.js";import"./function.BfuHTiS3.js";import"./snippet.SvdxwXcX.js";import"./form.DSxAoSRJ.js";import"./content.CJL2s7x-.js";import"./submit-button.N0v6n4Km.js";import"./path.B67Qsnh-.js";import"./file-include.CP7i8mO1.js";import"./textarea-include.DpoQi6DY.js";import"./validator.dwLAcooG.js";function V(e){return`${e}::ag`}function Q(e){switch(e.type){case"object":case"object_with_rest":case"loose_object":case"strict_object":return u(C(e),z(t=>Object.keys(e.entries).some(r=>t[r]!==void 0),"At least one field must be defined"))}}function W({map:e=new Map}={}){return{get(t){return e.get(t)},register({errors:t,jsonSchema:r,valibotSchema:a}){if(t!==void 0)return;const n=e.size.toString();e.set(n,a);let s={...r};const c=a;switch(c.type){case"nullable":case"nullish":{const{anyOf:o}=r;if(o===void 0||o.length!==2||!m(o[1])||o[1].type!=="null")throw new Error(`'{ anyOf: [<inner schema>, { type: "null" }] }' schema is expected for ${c.type} Valibot schema, but got '${JSON.stringify(r)}'`);const i=o[0];if(i===void 0||!m(i)||i.type===void 0||Array.isArray(i.type))throw new Error("Your Valibot schema is currently unsupported, please consider opening an issue with your example");s={...i,type:[i.type,"null"]};break}case"union":case"variant":{const{anyOf:o}=r;if(o===void 0||!o.every(m)||c.options.length!==o.length)throw new Error(`Expected 'anyOf' keyword for Valibot ${c.type} type, but got '${Object.keys(r).join(", ")}'`);for(let i=0;i<o.length;i++){const f=c.options[i];if("pipe"in f)throw new Error("unions with pipes currently unsupported");const l=Q(f);if(l===void 0)continue;const{$id:y}=o[i];if(y===void 0)throw new Error("Id for item of 'anyOf' item not found");e.set(V(y),l)}break}}return s.$id=n,s}}}function X(e){return(t,r)=>t.success?[]:t.issues.map(a=>{const n=a.path?.map(o=>o.key)??[],s=N(n,e),c=T(e.uiSchema??{},n)??q(r,n)??n[n.length-1]??s;return{instanceId:s,propertyTitle:String(c),message:a.message,error:a}})}function Z(e){return e.path===void 0}function ee(e,t){return t.success?[]:t.issues.filter(Z).map(r=>({instanceId:e.id,propertyTitle:e.title,message:r.message,error:r}))}function g(e,{$id:t,allOf:r}){if(t===void 0){const n=r?.[0];if(typeof n=="object"&&n.$id!==void 0)t=V(n.$id);else throw new Error("Schema id not found")}const a=e.get(t);if(a===void 0)throw new Error(`Valibot schema with id "${t}" not found`);return a}function te({schemaRegistry:e}){return{isValid(t,r,a){if(typeof t=="boolean")return t;const n=g(e,t);return h(n,a).success}}}function re(e){const t=X(e);return{validateFormValue(r,a){const n=g(e.schemaRegistry,r);return t(h(n,a),r)}}}function ne({schemaRegistry:e}){return{validateFieldValue(t,r){const a=g(e,t.schema),n=h(a,r);return ee(t,n)}}}function ae(e){return Object.assign(te(e),re(e),ne(e))}function oe({createFormValidator:e}){return(t,r={})=>{const a=W(),n=e(a,r),s=J(t,{overrideSchema:a.register,typeMode:"input"});return{schemaRegistry:a,validator:n,schema:s}}}const ie=oe({createFormValidator:(e,t)=>ae(Object.setPrototypeOf({schemaRegistry:e},t))});var se=S("<!> <pre> </pre>",1);function Fe(e,t){O(t,!0);const r=L({id:d(u(w(),Y(new RegExp("^\\d+$"),"Must be a number"),p(8))),active:d(U()),skills:d(u(b(u(w(),p(5))),p(4))),multipleChoicesList:d(u(b(H(["foo","bar","fuzz"])),G(2)))}),{schema:a,validator:n}=ie(r,{uiSchema:v}),s=B({...D,schema:a,uiSchema:v,validator:n,fieldsValidationMode:j|I|P,initialValue:K});var c=se(),o=E(c);M(o,{get form(){return s},novalidate:!0});var i=A(o,2),f=x(i,!0);R(i),_(l=>k(f,l),[()=>JSON.stringify(s.value,null,2)]),F(e,c),$()}export{Fe as default};
