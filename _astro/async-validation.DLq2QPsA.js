import"./_commonjsHelpers.IfcEWgGf.js";import"./legacy.udkn364h.js";import{p as u,f as h,s as i,h as y,t as v,b as g,a as w,c as _,r as b,j as x}from"./render.BvHAOK_y.js";import{i as $}from"./lifecycle.DwAjVE_7.js";import{a as A,A as j,b as k}from"./validator.BHKO1MVU.js";import{O as F}from"./definitions.BIliZ5NI.js";import{c as T}from"./index.BnhK0bA8.js";import{B as V}from"./basic-form.BPndkAk3.js";import{d as B}from"./form-defaults.DhLGtG7K.js";import"./function.CUUFLq3d.js";import"./snippet.nrOXwtJz.js";import"./form.CIqEorLF.js";import"./content.WfcxwgYZ.js";import"./submit-button.CjgHCkSY.js";import"./file-include.BgTeevnq.js";import"./textarea-include.DYx2lP1a.js";var L=h(`<p>The form accepts a sequence of digits (checked synchronously) with the number
  of digits from 3 to 6 (checked asynchronously, with a 70% chance of successful
  verification)</p> <p> </p> <!>`,1);function Q(m,n){u(n,!1);const r=A(new j),c=async(s,e)=>{if(await new Promise(l=>setTimeout(l,600)),Math.random()>.7)throw new Error("async error");return e.length>=s.minimum&&e.length<=s.maximum};r.addKeyword({keyword:"asyncLength",async:!0,type:"string",validate:c});const p={$async:!0,type:"string",pattern:"^\\d+$",asyncLength:{minimum:3,maximum:6}},t=T({...B,validator:k({ajv:r}),schema:p,fieldsValidationMode:F,onSubmit:console.log});$();var a=L(),o=i(y(a),2),f=_(o);b(o);var d=i(o,2);V(d,{get form(){return t},novalidate:!0,autocomplete:"off"}),v(()=>x(f,`form validation: ${t.submission.status??""}, fields validation: ${t.fieldsValidation.status??""}, errors: ${t.errors.size>0}`)),g(m,a),w()}export{Q as default};
