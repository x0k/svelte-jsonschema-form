import"./_commonjsHelpers.kZ6zyXPC.js";import"./legacy.DzVEN2XD.js";import{p as h,f as y,c as m,b as v,t as g,e as w,a as _,h as b,r as x,l as $,j as r}from"./render.CPvwW41j.js";import{i as k}from"./lifecycle.D-IDw_5-.js";import{a as A,A as j,b as F}from"./validator.B483JPzG.js";import{O as T}from"./definitions.wtp0xMx8.js";import{c as V}from"./index.CIuWDugx.js";import{B}from"./basic-form.AcncZklp.js";import{d as L}from"./form-defaults.BSrVYqKO.js";import"./function.BgD17R24.js";import"./snippet.D7t1VcYO.js";import"./form.C9xzVJsi.js";import"./content.DKvtjtz0.js";import"./submit-button.BlsqAjSa.js";import"./file-include.Da4kiAUQ.js";import"./textarea-include.r-_CAfr8.js";var M=y(`<p>The form accepts a sequence of digits (checked synchronously) with the number
  of digits from 3 to 6 (checked asynchronously, with a 70% chance of successful
  verification)</p> <p> </p> <!>`,1);function R(n,c){h(c,!1);const a=A(new j),p=async(s,i)=>{if(await new Promise(u=>setTimeout(u,600)),Math.random()>.7)throw new Error("async error");return i.length>=s.minimum&&i.length<=s.maximum};a.addKeyword({keyword:"asyncLength",async:!0,type:"string",validate:p});const f={$async:!0,type:"string",pattern:"^\\d+$",asyncLength:{minimum:3,maximum:6}},t=V({...L,validator:F({ajv:a}),schema:f,fieldsValidationMode:T,onSubmit:console.log});k();var e=M(),o=m(v(e),2),d=b(o);x(o);var l=m(o,2);B(l,{get form(){return t},novalidate:!0,autocomplete:"off"}),g(()=>$(d,`form validation: ${r(()=>t.submission.status)??""}, fields validation: ${r(()=>t.fieldsValidation.status)??""}, errors: ${r(()=>t.errors.size>0)??""}`)),w(n,e),_()}export{R as default};
