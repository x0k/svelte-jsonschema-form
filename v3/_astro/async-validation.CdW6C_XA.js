import"./_commonjsHelpers.1dJQk7Uh.js";import{p as l,f as u,s as i,b as h,t as y,c as v,a as g,e as w,r as b,h as _}from"./render.BOyS7vMO.js";import{A as x}from"./ajv.BouIcf4H.js";import{a as $,b as A}from"./validator.DoEX2m4s.js";import{b as V}from"./definitions.BmLf_Akm.js";import{c as k}from"./en.BXdxr6eO.js";import{B as F}from"./basic-form.j3pZhZXP.js";import{d as T}from"./defaults.CruQ-vSI.js";import"./array.6cJ3IzYY.js";import"./snippet.iIsHEDBV.js";import"./form.Cf5T_HZO.js";import"./content.CCy9mDDE.js";import"./submit-button.Balmve1T.js";import"./file-include.BNAtFzG0.js";import"./file-include.BAYmOH8m.js";var j=u(`<p>The form accepts a sequence of digits (checked synchronously) with the number
  of digits from 3 to 6 (checked asynchronously, with a 70% chance of successful
  verification)</p> <p> </p> <!>`,1);function H(m,n){l(n,!0);const a=$(new x),c=async(o,s)=>{if(await new Promise(d=>setTimeout(d,600)),Math.random()>.7)throw new Error("async error");return s.length>=o.minimum&&s.length<=o.maximum};a.addKeyword({keyword:"asyncLength",async:!0,type:"string",validate:c});const t=k({...T,createValidator:o=>A({...o,ajv:a}),schema:{$async:!0,type:"string",pattern:"^\\d+$",asyncLength:{minimum:3,maximum:6}},fieldsValidationMode:V,onSubmit:console.log});var e=j(),r=i(h(e),2),p=w(r);b(r);var f=i(r,2);F(f,{get form(){return t},novalidate:!0,autocomplete:"off"}),y(()=>_(p,`form validation: ${t.submission.status??""}, fields validation: ${t.fieldsValidation.status??""}, errors: ${t.errors.size>0}`)),v(m,e),g()}export{H as default};
