import"./_commonjsHelpers.DeY__IKx.js";import{p as l,f as u,s as i,e as h,t as y,b as v,a as g,c as w,r as b,h as _}from"./render.BvCbmumc.js";import{A as x}from"./ajv.CT5ug_Jq.js";import{a as $,b as A}from"./validator.Dk6VWZ68.js";import{b as V}from"./definitions.WtXJsyQU.js";import{c as k}from"./en.Bvx8K5l2.js";import{B as F}from"./basic-form.BDbMUkUH.js";import{d as T}from"./defaults.BTJ5FIzd.js";import"./snippet.B_3_pwki.js";import"./file.B9n3EPbd.js";import"./form.DR0NuKiz.js";import"./content.DTls_71_.js";import"./submit-button.CQSpRvmb.js";import"./checkboxes-include.PBW3e4Uc.js";import"./file-include.DVYe__Bb.js";var j=u(`<p>The form accepts a sequence of digits (checked synchronously) with the number
  of digits from 3 to 6 (checked asynchronously, with a 70% chance of successful
  verification)</p> <p> </p> <!>`,1);function H(m,n){l(n,!0);const a=$(new x),c=async(o,s)=>{if(await new Promise(d=>setTimeout(d,600)),Math.random()>.7)throw new Error("async error");return s.length>=o.minimum&&s.length<=o.maximum};a.addKeyword({keyword:"asyncLength",async:!0,type:"string",validate:c});const t=k({...T,createValidator:o=>A({...o,ajv:a}),schema:{$async:!0,type:"string",pattern:"^\\d+$",asyncLength:{minimum:3,maximum:6}},fieldsValidationMode:V,onSubmit:console.log});var e=j(),r=i(h(e),2),p=w(r);b(r);var f=i(r,2);F(f,{get form(){return t},novalidate:!0,autocomplete:"off"}),y(()=>_(p,`form validation: ${t.submission.status??""}, fields validation: ${t.fieldsValidation.status??""}, errors: ${t.errors.size>0}`)),v(m,e),g()}export{H as default};
