import { fail } from '@sveltejs/kit';
import type { Schema } from "@sjsf/form";
import { initForm, isValid, createFormHandler } from "@sjsf/sveltekit/server";

import * as defaults from '$lib/form/defaults'

import type { Actions } from "./$types";

const schema: Schema = {
  title: "Registration form",
  type: "object",
  required: ["firstName", "lastName"],
  properties: {
    firstName: {
      type: "string",
      title: "First name",
    },
    lastName: {
      type: "string",
      title: "Last name",
    },
  },
};

const handleForm = createFormHandler({
  ...defaults,
  schema,
  sendData: true
});

export const load = async () => {
  const form = initForm({ schema, sendSchema: true });
  return { form };
};

export const actions = {
  default: async ({ request }) => {
    const [form, data] = await handleForm(request.signal, await request.formData());
    if (!isValid(form, data)) {
      return fail(400, { form });
    }
    console.log(data)
    return {
      form
    };
  },
} satisfies Actions;
